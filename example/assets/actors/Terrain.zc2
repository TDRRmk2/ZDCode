/*
 * Terrain.
 *
 * Because why not.
 * Also it's cool!
 */

#DEFMACRO   POINTRES        4096
#DEFMACRO   FROMPOINT(x)    (1.0*(x)/POINTRES())
#DEFMACRO   TOPOINT(x)      ((x)*POINTRES())

#DEFMACRO   SPOTSIZE        64

#DEFMACRO   LERP(a,b,val)   ((a)+(((b)-(a))*(val)))
#DEFMACRO   TERRAGET(x,y)   (user_Heightmap[((y)*(Height)+(x))])
#DEFMACRO   AVG(a,b)        (((a)+(b))/2)

#DEFMACRO   HSCALE          3



class BaseTerrainSpot {
    set Scale  to   0.2;
    set Radius to   4;
    set Height to   8;
    set Health to   30;
    set Gravity to  0;

    is  SOLID;
    is  FORCEXYBILLBOARD;
    is  SHOOTABLE;
    is  NOBLOOD;
    is  CANPASS;

    label Death {
        invisi 0 A_PlaySound("zdpack/terrain/break", 0, 0.2);
        stop;
    };
}


class<TerrainSprite> TerrainSpot extends BaseTerrainSpot {
    label Spawn {
        param TerrainSprite A 16 A_ScaleVelocity(0.0);
        loop;
    };
}


class<Width, Height, GridWidth, GridHeight, ResolutionX, ResolutionY> Terrain {
    abstract array user_Heightmap;

    isn't SOLID;

    var user_x = 0;
    var user_y = 0;
    var user_cell_x = 0;
    var user_cell_y = 0;
    var user_cell_x_i = 0;
    var user_cell_y_i = 0;
    var user_corner_aa = 0;
    var user_corner_ba = 0;
    var user_corner_ab = 0;
    var user_corner_bb = 0;
    var user_z2 = 0;
    var user_z1 = 0;
    var user_spot_x = 0;
    var user_spot_y = 0;
    var user_spot_z = 0;

    abstract macro InitTerrain();
    abstract macro IterTerrainAt(height, rel_x, rel_y);

    macro TerrainSpotAt(top_sprite, height, rel_x, rel_y) {
        invisi 0 A_SpawnItemEx(TerrainSpot::(top_sprite), rel_x, rel_y, height);
    };

    label Spawn {
        inject InitTerrain;

        while (user_y < Height - 1) {
            while (user_x < Width - 1) {
                // interpolate terrain heights at cell
                invisi 0 A_SetUserVar("user_corner_aa", TERRAGET(user_x, user_y));
                invisi 0 A_SetUserVar("user_corner_ba", TERRAGET(user_x + 1, user_y));
                invisi 0 A_SetUserVar("user_corner_ab", TERRAGET(user_x, user_y + 1));
                invisi 0 A_SetUserVar("user_corner_bb", TERRAGET(user_x + 1, user_y + 1));

                while (user_cell_y_i < ResolutionY) {
                    while (user_cell_x_i < ResolutionX) {
                        invisi 0 A_SetUserVar("user_cell_x", TOPOINT(user_cell_x_i) / (ResolutionX));
                        invisi 0 A_SetUserVar("user_cell_y", TOPOINT(user_cell_y_i) / (ResolutionY));

                        invisi 0 A_SetUserVar("user_z1", LERP(user_corner_aa, user_corner_ba, 1.0 * FROMPOINT(user_cell_x)));
                        invisi 0 A_SetUserVar("user_z2", LERP(user_corner_ab, user_corner_bb, 1.0 * FROMPOINT(user_cell_x)));

                        invisi 0 A_SetUserVar("user_spot_z", FROMPOINT(LERP(user_z1, user_z2, 1.0 * FROMPOINT(user_cell_y))));

                        invisi 0 A_SetUserVar("user_spot_x", (1.0 * user_x + FROMPOINT(user_cell_x)) / Width  * GridWidth);
                        invisi 0 A_SetUserVar("user_spot_y", (1.0 * user_y + FROMPOINT(user_cell_y)) / Height * GridHeight);

                        inject IterTerrainAt(HSCALE() * user_spot_z, user_spot_x, user_spot_y);

                        invisi 0 A_SetUserVar("user_cell_x_i", user_cell_x_i + 1);
                    };

                    invisi 0 A_SetUserVar("user_cell_x_i", 0);
                    invisi 0 A_SetUserVar("user_cell_y_i", user_cell_y_i + 1);
                };

                invisi 0 A_SetUserVar("user_cell_y_i", 0);
                invisi 0 A_SetUserVar("user_x", user_x + 1);
            };

            invisi 0 A_SetUserVar("user_x", 0);
            invisi 0 A_SetUserVar("user_y", user_y + 1);
        };
        stop;
    };
}

#DEFM   S(H,x,y)  (TOPOINT(((H)*(sin((x)*3.14159/((y)-1)))))/2)
#DEFM   R(H)      (TOPOINT(Random(0,(H))*Random(0,(H))/(H)))

#DEFM   SNOWHEIGHT  (130)
#DEFM   MAXHEIGHT   (150)

derive RandomTerrain as Terrain::(14, 14, 4000, 4000, 8, 8) {
    array user_Heightmap = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    }; // ewwwwwwww

    macro InitTerrain() {};

    macro IterTerrainAt(height, rel_x, rel_y) {
        if (height >= SNOWHEIGHT())
            inject TerrainSpotAt("TER2", height, rel_x, rel_y);

        else
            inject TerrainSpotAt("TER1", height, rel_x, rel_y);
    };
};

derive RandomTerrainCoarse as Terrain::(14, 14, 2800, 2800, 6, 6) {
    array user_Heightmap = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()),R(MAXHEIGHT()), 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    }; // ewwwwwwwwwwwwwwwwh!

    macro InitTerrain() {};

    macro IterTerrainAt(height, rel_x, rel_y) {
        if (height >= SNOWHEIGHT())
            inject TerrainSpotAt("TER2", height, rel_x, rel_y);

        else
            inject TerrainSpotAt("TER1", height, rel_x, rel_y);
    };
};
